@using Hite.Model;
@using Hite.Services;
@using Controleng.Common;
@{  
    Page.Title = "添加资料";
    Layout = "~/Shared/_SiteLayout.cshtml";
    AttachmentInfo model = new AttachmentInfo();
    int siteId = CECRequest.GetQueryInt("siteId", 0);
    int id = CECRequest.GetQueryInt("id", 0);
    if (siteId == 0)
    {
    <text>
    <div class="msg">
        Arguments Error!</div>
    </text>
        return;
    }
    var categoryList = CategoryService.ListBySiteId(siteId).Where(p => p.ParentId == 0);

    System.Web.Mvc.FormCollection form = new System.Web.Mvc.FormCollection(this.Request.Unvalidated().Form);

    var errors = false;
    var msg = string.Empty;
    
    if(IsPost){
        
        model.Id = id;
        model.SiteId = siteId;
        model.Introduction = form["txtIntroduction"];
        model.IsDeleted = TypeConverter.StrToInt(form["rblIsDeleted"]) == 1 ? true : false;
        model.PublishDate = form["txtPublishDateTime"].AsDateTime() == DateTime.MinValue ? DateTime.Now : form["txtPublishDateTime"].AsDateTime();
        model.Sort = TypeConverter.StrToInt(form["txtSort"], 0);
        model.Title = form["txtTitle"];
        model.Url = form["txtUrl"];
        model.Size = TypeConverter.StrToInt(form["txtSize"],0);
        model.Extension = (FileExtension)Enum.Parse(typeof(FileExtension), form["ddlExtension"]);

        //ParentCategoryIds
        model.ParentCategoryIds = System.Text.RegularExpressions.Regex.Replace(form["parentCategoryIds"], @"(\-)$", string.Empty, System.Text.RegularExpressions.RegexOptions.IgnoreCase);
        if (string.IsNullOrEmpty(model.ParentCategoryIds))
        {
            ModelState.AddError("CategoryId", "请选择分类");
            errors = true;
        }
        //CategoryId
        string[] parentCategoryIds = model.ParentCategoryIds.Split(new char[] { '-' }, StringSplitOptions.RemoveEmptyEntries);
        if (parentCategoryIds.Length > 0)
        {
            model.CategoryId = parentCategoryIds.LastOrDefault().AsInt();
        }

        if (model.CategoryId == 0)
        {
            ModelState.AddError("CategoryId", "请选择分类");
            errors = true;
        }
        
        if(model.Title.IsEmpty()){
            errors = true;
            ModelState.AddError("title","请输入资料名");
        }
        if(!errors){
            AttachmentService.Update(model);

            if (id > 0)
            {
                msg = string.Format("<div class='msg'>修改成功！&nbsp;&nbsp;<a href=\"?siteId={0}\">在发一篇</a>&nbsp;&nbsp;或者&nbsp;&nbsp;<a href=\"list.cshtml?siteId={0}\">返回列表页</a></div>", siteId);
            }
            else
            {
                msg = string.Format("<div class='msg'>保存成功&nbsp;&nbsp;<a href=\"?siteId={0}\">在发一篇</a>&nbsp;&nbsp;或者&nbsp;&nbsp;<a href=\"list.cshtml?siteId={0}\">返回列表页</a></div>", siteId);
            }
        }
        
    }else{
        model = AttachmentService.Get(id);
    }

    string currentSelectedCatJSON = "{}";
    if (model.Id > 0)
    {
        //对主要类别设置默认值
        currentSelectedCatJSON = ArticleService.FormatParentCategoryIdsToJson(model.ParentCategoryIds);

    }
}
@section head{
    <style type="text/css">
        .swfuploadWrapper{padding:5px; }
    </style>
    <!--编辑器以及编辑器中本地上传图片-->
    <script src="/editor/tiny_mce/tiny_mce.js" type="text/javascript"></script>
    <script src="/Scripts/uploadimgforeditor.js" type="text/javascript"></script>
    <script src="/Scripts/swfupload/swfupload.js" type="text/javascript"></script>
    <script src="/Scripts/swfupload/handlers.js" type="text/javascript"></script>
    <!--编辑器以及编辑器中本地上传图片-->
    <script type="text/javascript">
        var GLOBAL = {
           currentRootCategory : {count:@(categoryList.Count()),cats:[@{foreach (var item in categoryList)
                                                                        {<text>{id:@item.Id,name:"@item.Name"},</text>}}]},
           currentSelectedCategoryJson : @(currentSelectedCatJSON)
        };
    </script>
}
<div>
    <form method="post" action="" onsubmit="return checkForm();">
    @Html.Hidden("parentCategoryIds", 0)
    <fieldset>
        <legend>资料信息</legend>
        @Html.Raw(msg)
        @Html.ValidationSummary()
        <table width="100%">
            <tr>
                <th colspan="2" align="right"><div id="catloading" style="display: none;">
                        <img src="/images/loading.gif" alt="正在载入..." />正在载入...</div></th>
            </tr>
            <tr>
                <th align="right">请选择类别：</th>
                <td>
                    <span id="mainCategoryWrapper"></span><span class="required">*</span>
                </td>
            </tr>

            <tr>
                <th align="right">资料名称：</th>
                <td>@Html.TextBox("txtTitle", model.Id == 0 ? Request["txtTitle"] : model.Title, new { @class = "text-five" })<span class="required">*</span></td>
            </tr>
            <tr>
                <th align="right" valign="top">资料地址：</th>
                <td>@Html.TextBox("txtUrl", model.Id == 0 ? Request["txtUrl"] : model.Url, new { @class = "text-five" })<font color="red">选择完“本地浏览文件”后，请直接点击“开始上传”</font><br /><span class="swfuploadWrapper"><span id="swfuploadPlaceholder"></span></span><span id="tempFileName"></span><span><input type="button" value="开始上传" onclick="customerUpload();" id="btnStartUpload" />&nbsp;&nbsp;<input type="button" id="btnUploadCancle" value="取消上传" onclick="swfu.cancelQueue();" disabled="disabled" /></span><span id="processbar"></span></td>
            </tr>
            <tr>
                <th align="right">资料扩展名：</th>
                <td>@Hite.Mvc.ExtensionHtmlHelper.RenderFileExtensionDropdownList("ddlExtension", model.Id == 0 ? Request["ddlExtension"] : model.Extension.ToString())</td>
            </tr>
            <tr>
                <th align="right">资料大小：</th>
                <td>@Html.TextBox("txtSize", model.Id == 0 ? Request["txtSize"] : model.Size.ToString())
                    单位Bytes
                </td>
            </tr>
            <tr>
                <th align="right" valign="top">资料介绍：</th>
                <td>@Html.TextArea("txtIntroduction", model.Id == 0 ? form["txtIntroduction"] : model.Introduction, new { cols = 70, rows = 10 })</td>
            </tr>
            <tr>
                <th align="right" valign="top">发布日期：</th>
                <td>@Html.TextBox("txtPublishDateTime", model.Id == 0 ? Request["txtPublishDateTime"] : model.PublishDate.ToShortDateString())<br />（不填默认是当前日期）</td>
            </tr>
            <tr>
                <th align="right">排序：</th>
                <td>@Html.TextBox("txtSort", model.Id == 0 ? Request["txtSort"] : model.Sort.ToString())（默认：0）</td>
            </tr>
            <tr>
                <th align="right">是否删除：</th>
                <td><input type="radio" name="rblIsDeleted" value="0" @(model.Id == 0 ? Request["rblIsDeleted"] : (model.IsDeleted ? "" : "checked")) />否<input type="radio" name="rblIsDeleted" value="1" @(model.Id == 0 ? Request["rblIsDeleted"]:(model.IsDeleted? "checked": "")) />是（默认：否）</td>
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="保存" />&nbsp;&nbsp;<a href="list.cshtml?siteId=@siteId" class="btn-back">返回</a></td>
            </tr>
        </table>
    </fieldset>
    </form>
</div>
@section foot{
    <script type="text/javascript">
        var swfu;
        $(document).ready(function () {
            //SWF Upload Init
            swfu = new SWFUpload({
                // Backend settings
                upload_url: "/Shared/SWFUpload.cshtml",
                file_post_name: "attachFile",

                // Flash file settings
                file_size_limit: "50 MB",
                file_types: "*.*", 		// or you could use something like: "*.doc;*.wpd;*.pdf",
                file_types_description: "All Files",
                file_upload_limit: 0,
                file_queue_limit: 1,

                custom_settings: {
                    cancelButtonId: "btnUploadCancle",
                    startButtionId: "btnStartUpload"
                },
                swfupload_preload_handler: preLoad,
                swfupload_load_failed_handler: loadFailed,
                file_dialog_complete_handler: fileDialogComplete,
                file_queued_handler: fileQueued,
                upload_start_handler: uploadStart,
                upload_progress_handler: uploadProgress,
                upload_error_handler: uploadError,
                upload_success_handler: uploadSuccess,
                upload_complete_handler: uploadComplete,

                // Button Settings
                button_text: '<span class="redText">本地浏览文件</span>',
                button_text_style: ".redText { color: #FF0000; }",
                button_placeholder_id: "swfuploadPlaceholder",
                button_width: 90,
                button_height: 20,
                button_text_left_padding: 2,
                button_cursor: SWFUpload.CURSOR.HAND,

                // Flash Settings
                flash_url: "/Scripts/swfupload/swfupload.swf",
                flash9_url: "/Scripts/swfupload/swfupload_fp9.swf",

                // Debug settings
                debug: false
            });

            createCatSelectV2("mainCategoryWrapper", "0|0|99999", GLOBAL.currentRootCategory, GLOBAL.currentSelectedCategoryJson);

            //设置编辑器
            tinyMCE.init({
                theme: "advanced",
                mode: "exact",
                width: "660",
                height: "380",
                elements: "txtIntroduction",
                language: "zh",
                plugins: "table,insertdatetime,media,-xuimage,contextmenu,paste,inlinepopups",
                // Theme options
                theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,formatselect,fontselect,fontsizeselect",
                theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|bullist,numlist,|,outdent,indent,|,link,unlink,image,|,insertdate,inserttime,|,forecolor,backcolor",
                theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,|,media,code,|,xuimage",
                theme_advanced_toolbar_location: "top",
                theme_advanced_toolbar_align: "left",
                theme_advanced_path: false,
                theme_advanced_statusbar_location: "bottom",
                theme_advanced_resizing: true,
                theme_advanced_resize_horizontal: false,
                theme_advanced_resizing_use_cookie: 1,
                theme_advanced_more_colors: false,
                theme_advanced_font_sizes: '3,4,5,6,7',
                theme_advanced_fonts: '楷体_GB2312=楷体_GB2312;黑体=黑体;隶书=隶书;Times New Roman=Times New Roman;Arial=Arial;'
            });
            $("#txtPublishDateTime").datepicker({ dateFormat: 'yy-mm-dd', monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'], dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'] });

        });
        function customerUpload(){
            if(swfu.getStats().files_queued === 0){
                alert("请先选择本地文件");
                return false;
            }
            document.getElementById('btnStartUpload').disabled = true;
            document.getElementById('btnUploadCancle').disabled = false;
            swfu.startUpload();
        }
        function checkForm() {
            var errors = false;
            //判断是否选择类别
            var parentCategoryIds = getCatsV2(99999, 0);
            if (parentCategoryIds == "") {
                alert("请选择类别");
                errors = true;
                return false;
            }
            $("#parentCategoryIds").val(parentCategoryIds);

            var titleObj = $("#txtTitle");
            if (titleObj.val() == "") {
                alert("请输入资料名");
                titleObj.focus();
                errors = true;
                return false;
            }

            if (errors) {
                return false;
            }

            return true;
        }
    </script>
    }
